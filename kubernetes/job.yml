apiVersion: batch/v1
kind: Job
metadata:
  name: ${JOB_NAME}
spec:
  template:
    spec:
      containers:
      - name: ipno-job
        image: gcr.io/$GOOGLE_PROJECT_ID/ipno-backend:${BACKEND_IMAGE_TAG}
        command: ["ipno/manage.py", "${COMMAND}"]
        env:
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: cloudsql
                key: username
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: cloudsql
                key: password
          - name: POSTGRES_HOST
            valueFrom:
              secretKeyRef:
                name: cloudsql
                key: host
          - name: DJANGO_SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: django
                key: secret-key
          - name: DJANGO_SETTINGS_MODULE
            valueFrom:
              secretKeyRef:
                name: django
                key: setting-module
          - name: ELASTICSEARCH_HOST
            valueFrom:
              secretKeyRef:
                name: elasticsearch
                key: host
          - name: WRGL_API_KEY
            valueFrom:
              secretKeyRef:
                name: wrgl
                key: api-key
          - name: DROPBOX_APP_KEY
            valueFrom:
              secretKeyRef:
                name: dropbox
                key: app-key
          - name: DROPBOX_APP_SECRET
            valueFrom:
              secretKeyRef:
                name: dropbox
                key: app-secret
          - name: DROPBOX_REFRESH_TOKEN
            valueFrom:
              secretKeyRef:
                name: dropbox
                key: refresh-token
          - name: SENDINBLUE_API_KEY
            valueFrom:
              secretKeyRef:
                name: sendinblue
                key: api-key
          - name: FROM_EMAIL
            valueFrom:
              secretKeyRef:
                name: ipno
                key: from-email
          - name: HOST
            valueFrom:
              secretKeyRef:
                name: ipno
                key: host
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: "gcloud-credentials.json"
      - image: gcr.io/cloudsql-docker/gce-proxy:1.25.0-alpine
        name: cloudsql-proxy
        command: ["/cloud_sql_proxy", "--dir=/cloudsql",
                  "-instances=excellent-zoo-300106:us-east4:$CLOUD_SQL_DATABASE=tcp:5432",
                  "-verbose=false",
                  "-credential_file=/secrets/cloudsql/credentials.json"]
        volumeMounts:
          - name: cloudsql-oauth-credentials
            mountPath: /secrets/cloudsql
            readOnly: true
          - name: ssl-certs
            mountPath: /etc/ssl/certs
          - name: cloudsql
            mountPath: /cloudsql
      imagePullSecrets:
        - name: regcred
      volumes:
        - name: cloudsql-oauth-credentials
          secret:
            secretName: cloudsql-oauth-credentials
        - name: ssl-certs
          hostPath:
            path: /etc/ssl/certs
        - name: cloudsql
          emptyDir: {}
      restartPolicy: Never
  backoffLimit: 4
