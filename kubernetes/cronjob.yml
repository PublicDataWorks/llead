apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: ${CRONJOB_NAME}
spec:
  schedule: "${CRONJOB_SCHEDULE}"
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      backoffLimit: 0
      template:
        spec:
          containers:
            - name: ipno-cronjob
              image: gcr.io/$GOOGLE_PROJECT_ID/ipno-backend:${BACKEND_IMAGE_TAG}
              resources:
                requests:
                  cpu: 1
                  memory: 2Gi
              command: [ "/bin/sh", "-c" ]
              args:
                - |
                  trap "touch /tmp/pod/main-terminated" EXIT
                  ipno/manage.py ${CRONJOB_COMMAND}
              env:
                - name: POSTGRES_USER
                  valueFrom:
                    secretKeyRef:
                      name: cloudsql
                      key: username
                - name: POSTGRES_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: cloudsql
                      key: password
                - name: POSTGRES_HOST
                  valueFrom:
                    secretKeyRef:
                      name: cloudsql
                      key: host
                - name: DJANGO_SECRET_KEY
                  valueFrom:
                    secretKeyRef:
                      name: django
                      key: secret-key
                - name: DJANGO_SETTINGS_MODULE
                  valueFrom:
                    secretKeyRef:
                      name: django
                      key: setting-module
                - name: ELASTICSEARCH_HOST
                  valueFrom:
                    secretKeyRef:
                      name: elasticsearch
                      key: host
                - name: WRGL_API_KEY
                  valueFrom:
                    secretKeyRef:
                      name: wrgl
                      key: api-key
                - name: DROPBOX_APP_KEY
                  valueFrom:
                    secretKeyRef:
                      name: dropbox
                      key: app-key
                - name: DROPBOX_APP_SECRET
                  valueFrom:
                    secretKeyRef:
                      name: dropbox
                      key: app-secret
                - name: DROPBOX_REFRESH_TOKEN
                  valueFrom:
                    secretKeyRef:
                      name: dropbox
                      key: refresh-token
                - name: SENDINBLUE_API_KEY
                  valueFrom:
                    secretKeyRef:
                      name: sendinblue
                      key: api-key
                - name: FROM_EMAIL
                  valueFrom:
                    secretKeyRef:
                      name: ipno
                      key: from-email
                - name: FEEDBACK_TO_EMAIL
                  valueFrom:
                    secretKeyRef:
                      name: ipno
                      key: feedback-to-email
                - name: HOST
                  valueFrom:
                    secretKeyRef:
                      name: ipno
                      key: host
                - name: MAPBOX_KEY
                  valueFrom:
                    secretKeyRef:
                      name: mapbox
                      key: key
                - name: GOOGLE_APPLICATION_CREDENTIALS
                  value: "gcloud-credentials.json"
              volumeMounts:
                - mountPath: /tmp/pod
                  name: tmp-pod
            - image: gcr.io/cloudsql-docker/gce-proxy:1.25.0-alpine
              name: cloudsql-proxy
              command: [ "/bin/sh", "-c" ]
              args:
                - |
                  /cloud_sql_proxy --dir=/cloudsql -instances=excellent-zoo-300106:us-east4:${CLOUD_SQL_DATABASE}=tcp:5432 -verbose=false -credential_file=/secrets/cloudsql/credentials.json &
                  CHILD_PID=$!
                  while true
                    do
                        if [[ -f "/tmp/pod/main-terminated" ]]
                        then
                            kill $PID 2>/dev/null
                            exit 0
                        fi
                        sleep 1
                    done
              volumeMounts:
                - name: cloudsql-oauth-credentials
                  mountPath: /secrets/cloudsql
                  readOnly: true
                - name: ssl-certs
                  mountPath: /etc/ssl/certs
                - name: cloudsql
                  mountPath: /cloudsql
                - name: tmp-pod
                  mountPath: /tmp/pod
                  readOnly: true
          imagePullSecrets:
            - name: regcred
          volumes:
            - name: cloudsql-oauth-credentials
              secret:
                secretName: cloudsql-oauth-credentials
            - name: ssl-certs
              hostPath:
                path: /etc/ssl/certs
            - name: cloudsql
              emptyDir: {}
            - name: tmp-pod
              emptyDir: {}
          restartPolicy: "Never"
  concurrencyPolicy: Replace
