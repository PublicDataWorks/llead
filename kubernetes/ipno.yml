apiVersion: apps/v1
kind: Deployment
metadata:
  name: ipno-backend
  labels:
    app: ipno-backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: ipno-backend
  template:
    metadata:
      labels:
        app: ipno-backend
    spec:
      containers:
        - name: ipno-backend-app
          readinessProbe:
            httpGet:
              path: /api/status/
              port: readiness-port
          ports:
            - name: readiness-port
              containerPort: 8000
          image: us.gcr.io/$GOOGLE_PROJECT_ID/ipno-backend:${BACKEND_IMAGE_TAG}
          imagePullPolicy: Always
          resources:
            requests:
              cpu: 500m
              memory: 1Gi
          volumeMounts:
            - name: backend-gsa
              mountPath: /var/secrets/google
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: cloudsql
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: cloudsql
                  key: password
            - name: POSTGRES_HOST
              valueFrom:
                secretKeyRef:
                  name: cloudsql
                  key: host
            - name: DJANGO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: django
                  key: secret-key
            - name: DJANGO_SETTINGS_MODULE
              valueFrom:
                secretKeyRef:
                  name: django
                  key: setting-module
            - name: ELASTICSEARCH_HOST
              valueFrom:
                secretKeyRef:
                  name: elasticsearch
                  key: host
            - name: WRGL_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: wrgl
                  key: client-id
            - name: WRGL_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: wrgl
                  key: client-secret
            - name: DROPBOX_APP_KEY
              valueFrom:
                secretKeyRef:
                  name: dropbox
                  key: app-key
            - name: DROPBOX_APP_SECRET
              valueFrom:
                secretKeyRef:
                  name: dropbox
                  key: app-secret
            - name: DROPBOX_REFRESH_TOKEN
              valueFrom:
                secretKeyRef:
                  name: dropbox
                  key: refresh-token
            - name: SENDINBLUE_API_KEY
              valueFrom:
                secretKeyRef:
                  name: sendinblue
                  key: api-key
            - name: MAPBOX_KEY
              valueFrom:
                secretKeyRef:
                  name: mapbox
                  key: key
            - name: CELERY_BROKER_URL
              valueFrom:
                secretKeyRef:
                  name: celery
                  key: broker-url
            - name: REDIS_SENTINEL_MASTER_NAME
              valueFrom:
                secretKeyRef:
                  name: celery
                  key: sentinel-master-name
            - name: REDIS_SENTINEL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: celery
                  key: sentinel-password
            - name: SLACK_BOT_TOKEN
              valueFrom:
                secretKeyRef:
                  name: slack
                  key: slack-bot-token
            - name: SLACK_CHANNEL
              valueFrom:
                secretKeyRef:
                  name: slack
                  key: slack-channel
            - name: FROM_EMAIL
              valueFrom:
                configMapKeyRef:
                  name: ipno
                  key: from-email
            - name: FEEDBACK_TO_EMAIL
              valueFrom:
                configMapKeyRef:
                  name: ipno
                  key: feedback-to-email
            - name: HOST
              valueFrom:
                configMapKeyRef:
                  name: ipno
                  key: host
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: "/var/secrets/google/service-account.json"
        - image: us.gcr.io/cloudsql-docker/gce-proxy:1.32.0-alpine
          name: cloudsql-proxy
          command: ["/cloud_sql_proxy",
                    "-instances=$GOOGLE_PROJECT_ID:us-central1:${CLOUD_SQL_DATABASE}=tcp:5432",
                    "-verbose=false"]
      volumes:
        - name: backend-gsa
          secret:
            secretName: backend-gsa
      serviceAccountName: backend-ksa

---

apiVersion: v1
kind: Service
metadata:
  name: ipno-backend
  labels:
    app: ipno-backend
spec:
  type: ClusterIP
  ports:
    - targetPort: 8000
      port: 80
  selector:
    app: ipno-backend
