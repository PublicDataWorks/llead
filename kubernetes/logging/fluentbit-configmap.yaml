apiVersion: v1
kind: ConfigMap
metadata:
  name: fluent-bit-config
  namespace: logging
  labels:
    k8s-app: fluent-bit
data:
  # Configuration files: server, input, filters, and output
  # =======================================================
  fluent-bit.conf: |
    [SERVICE]
        Flush         1
        Log_Level     info
        Daemon        off
        Parsers_File  parsers.conf
        HTTP_Server   On
        HTTP_Listen   0.0.0.0
        HTTP_Port     2020
        # Plugins_File /fluent-bit/etc/plugins.conf

    @INCLUDE input-kubernetes.conf
    @INCLUDE filter-kubernetes.conf
    @INCLUDE output-stackdriver.conf

  input-kubernetes.conf: |
    [INPUT]
        Name                      tail
        Path                      /var/log/containers/*.log
        Tag                       kube.*
        Parser                    docker
        DB                        /var/log/flb_kube.db
        Mem_Buf_Limit             20MB
        Refresh_Interval          10
        Buffer_Chunk_Size         256k
        Buffer_Max_Size           10240k

  filter-kubernetes.conf: |
    [FILTER]
        Name                      kubernetes
        Match                     kube.*
        Kube_URL                  https://kubernetes.default.svc:443
        Kube_CA_File              /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        Kube_Token_File           /var/run/secrets/kubernetes.io/serviceaccount/token
        Kube_Tag_Prefix           kube.var.log.containers.
        Merge_Log                 On
        Merge_Log_Key             log_processed

    [FILTER]
        Name                      nest
        Match                     kube.*
        Operation                 lift
        Nested_under              log_processed

    [FILTER]
        Name                      multiline
        Match                     kube.*
        multiline.key_content     log
        multiline.parser          python

    [FILTER]
        Name                      multiline
        Match                     kube.*
        multiline.key_content     log
        multiline.parser          multiline-python-extend

    [FILTER]
        Name                      multiline
        Match                     kube.*
        multiline.key_content     log
        multiline.parser          multiline-scrapy

    [FILTER]
        Name                      parser
        Match                     kube.*
        Key_Name                  log
        Parser                    scrapy
        Parser                    cloudsql
        Parser                    apache
        Parser                    nginx

    [FILTER]
        Name                      modify
        Match                     kube.*
        Condition                 Key_value_matches     code     ^[234]\d{2}$
        Add                       loglevel              INFO

    [FILTER]
        Name                      modify
        Match                     kube.*
        Condition                 Key_value_matches     code     ^5\d{2}$
        Add                       loglevel              ERROR

    [FILTER]
        Name                      modify
        Match                     kube.*
        Condition                 Key_exists            cloudsql_msg
        Add                       loglevel              INFO
        Hard_rename               cloudsql_msg          message

    [FILTER]
        Name                      modify
        Match                     kube.*
        Condition                 Key_value_matches     log     ^Traceback\s.*
        Add                       loglevel              ERROR

    [FILTER]
        Name                      modify
        Match                     kube.*
        Hard_rename               log                   message

  output-stackdriver.conf: |
    [OUTPUT]
        Name                      stackdriver
        Match                     kube.*
        resource                  k8s_container
        k8s_cluster_name          ipno-staging
        k8s_cluster_location      us-east4-a
        severity_key              loglevel

  parsers.conf: |
    [PARSER]
        Name            apache
        Format          regex
        Regex           ^(?<host>[^ ]*) [^ ]* (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^\"]*?)(?: +\S*)?)?" (?<code>[^ ]*) (?<size>[^ ]*)(?: "(?<referer>[^\"]*)" "(?<agent>[^\"]*)")?$
        Time_Key        time
        Time_Format     %d/%b/%Y:%H:%M:%S %z

    [PARSER]
        Name            nginx
        Format          regex
        Regex           ^(?<remote>[^ ]*) (?<host>[^ ]*) (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^\"]*?)(?: +\S*)?)?" (?<code>[^ ]*) (?<size>[^ ]*)(?: "(?<referer>[^\"]*)" "(?<agent>[^\"]*)" "(?<forwarded>[^\"]*)")?$
        Time_Key        time
        Time_Format     %d/%b/%Y:%H:%M:%S %z

    [PARSER]
        Name            json
        Format          json
        Time_Key        time
        Time_Format     %d/%b/%Y:%H:%M:%S %z

    [PARSER]
        Name            docker
        Format          json
        Time_Key        time
        Time_Format     %Y-%m-%dT%H:%M:%S.%L
        Time_Keep       On

    [PARSER]
        Name            cloudsql
        Format          regex
        Regex           ^(?<time>(\d{4}\/\d{2}\/\d{2} \d{2}:\d{2}:\d{2})) (?<cloudsql_msg>.+)$
        Time_Key        time
        Time_Format     %Y/%m/%d %H:%M:%S

    [PARSER]
        Name   scrapy
        Format regex
        Regex  /^(?<time>.+) \[(?<name>[^\]]*)\] (?<loglevel>\w*): (?<message>(.|\n)*)$/
        Time_Key time
        Time_Format %Y-%m-%d %H:%M:%S

    [MULTILINE_PARSER]
        name          multiline-scrapy
        type          regex
        flush_timeout 1000
        #
        # Regex rules for multiline parsing
        # ---------------------------------
        #
        # configuration hints:
        #
        #  - first state always has the name: start_state
        #  - every field in the rule must be inside double quotes
        #
        # rules |   state name  | regex pattern                                           | next state
        # ------|---------------|----------------------------------------------------------------------
        rule      "start_state"   "/^.+ \[[^\]]+\] \w+: [\w\s]+:\n?$/"                         "cont"
        rule      "cont"          "/^(([\[\{\s]('.*')(:\s.*)?,?[\]\}]?)|(\[\])|(\{\}))\n?/"    "cont"

    [MULTILINE_PARSER]
        name          multiline-python-extend
        type          regex
        flush_timeout 2000
        #
        # Regex rules for multiline parsing
        # ---------------------------------
        #
        # configuration hints:
        #
        #  - first state always has the name: start_state
        #  - every field in the rule must be inside double quotes
        #
        # rules |   state name  | regex pattern                                           | next state
        # ------|---------------|----------------------------------------------------------------------
        rule      "start_state"   "/^Traceback [\w\W]*/"                                     "cont"
        rule      "cont"          "/^((\s+.+)|(The above .+)|(Traceback.+)|$)/"                  "cont"

